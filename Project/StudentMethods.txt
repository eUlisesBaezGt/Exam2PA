



void EnableStudent(vector<Student>& list) {
	bool found = false;
	cout << "ID of Student to enable: ";
	int IS;
	cin >> IS;
	cin.ignore();
	for (auto& i : list) {
		if (IS == i.id) {
			found = true;
			i.status = true;
			cout << "Student status successfully updated" << endl;
		}
	}
	if (!found) {
		cout << "Student ID not found" << endl;
	}
}

void DisableStudent(vector<Student>& list) {
	bool found = false;
	cout << "ID of Student to disable: ";
	int IS;
	cin >> IS;
	cin.ignore();
	for (auto& i : list) {
		if (IS == i.id) {
			found = true;
			i.status = false;
			cout << "Student status successfully updated" << endl;
		}
	}
	if (!found) {
		cout << "Student ID not found" << endl;
	}
}



void Log_Stud(vector<Student>& students) {
	bool run = true;
	int option;

	while (run)
	{
		cout << "-------- LOGGED STUDENT MENU -------- ";
		cout << "1) Disable Student" << endl;
		cout << "2) Enable Student" << endl;
		cout << "3) Register Breakfast" << endl;
		cout << "4) Register Meal" << endl;
		cout << "5) Register Dinner" << endl;
		cout << "6) Exit" << endl;
		cout << "Select your option: ";

		cin >> option;
		cin.ignore();
		switch (option) {
		case DisStudent:
			cout << "Disable Student" << endl;
			DisableStudent(students);
			break;
		case EnaStudent:
			cout << "Enable Student" << endl;
			EnableStudent(students);
			break;
		case RegBreakfast:
			cout << "Register Breakfast" << endl;
			break;
		case RegMeal:
			cout << "Register Meal" << endl;
			break;
		case RegDinner:
			cout << "Register Dinner" << endl;
			break;
		case ExitStudentLog:
			cout << "Return to Main Menu" << endl;
			break;
		default:
			cout << "Invalid option";
			break;
		}
	}
}

void LoginStud(vector<Student>& list) {
	bool found = false;
	int ID;
	string Password;
	cout << "Enter your ID: ";
	cin >> ID;
	cin.ignore();
	cout << "Enter your password: ";
	getline(cin, Password);
	for (auto& i : list) {
		if (i.id == ID && i.password == Password && i.status) {
			found = true; break;}}
	if (found){cout << "Welcome " << endl; Log_Stud(list);}
	else if (!found){cout << "Invalid ID or password or user disabled" << endl;}}


